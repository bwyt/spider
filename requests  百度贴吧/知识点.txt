爬虫
  概念: 模拟客户端发送请求, 获取响应对象的程序
  使用场景:
      主要用途: 数据采集
      其他用途: 抢、投票; 点赞;阅读量
  爬取数据用途: 进行数据分析, 直接展示
  分类:
      通用爬虫: 全网爬虫, 从一些种子URL, 扩展整个网站的爬虫
      聚焦爬虫: 主题爬虫, 只爬相关主体的页面
      
  工作流程:（重点）
      准备url列表
      遍历url列表, 发送请求, 获取响应对象
      提取数据 --> 入库
      提取新url --> url列表
      
  ROBOTS协议:
      用于规定这个网站哪些URL可以爬, 哪些URL不可以爬, 是一个道德规范, 可以遵从也可以不遵守
      （https://www.taobao.com/robots.txt）
   
   
   
HTTP和HTTPS复习内容
	1. URL
		格式: scheme://host[:port#]/path/…/[?query-string][#anchor]
			    https://www.jd.com:443/goods/1?good_name = '小米手机'
              scheme:协议
              host:域名
              port:端口
              path:路径
              query:查询字符串参数
              anchor:锚点,浏览器显示页面的位置,只和浏览器有关系,爬虫是不关心的
              
	2. 浏览器发送HTTP请求的过程
        根据域名 -> 给DNS服务器发送请求, 获取WEB服务器IP地址
        根据IP地址给WEB服务器发送请求, 获取响应数据
        注意: 浏览器渲染的页面内容和爬虫请求的页面, 并不完全一样. 
        原因: 浏览器在渲染的时候, 可能会动态就加载执行js生成新的页面元素.

	3. HTTP和HTTPS概述
        http:
          端口号: 80
          以明文传输, 不安全, 效率高
        Https:
          端口号: 443
          以密文传输, 安全, 效率低
  4. HTTP请求报文的格式(重点)
        请求行
        请求头
        请求体

	5. 常见的请求方法
        get:
          用于获取数据, 请求参数在URL上, 数据大小有限制(2k`7k)
        post
          用于提交数据到服务器, 请求数据在请求体重, 数据大小没有限制
          
          
HTTP常见请求头(重点)
        User-Agent: 代表客户端
        Referer: 我来自哪里
        Cookie: 我是谁, 表示是那个用户
    重要响应头
	      Set-Cookie** 服务器设置cookie到客户端

响应状态码(status code): 在爬虫中状态码不可信, 数据才是可信的
                        客户端的数据要和抓到的数据一致

